{{define "html-head"}}
<head data-turbolinks-eval="false">
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <meta name="description" content="dcrdata, an original Decred block explorer powered by Go">
    <meta name="author" content="The Decred developers">
    <!--  Custom favicon  -->
    <link rel="apple-touch-icon" sizes="180x180" href="/images/favicon/apple-touch-icon.png">
    <link rel="icon" href="/images/favicon/favicon.ico">
    <link rel="icon" type="image/png" href="/images/favicon/favicon-32x32.png" sizes="32x32">
    <link rel="icon" type="image/png" href="/images/favicon/favicon-16x16.png" sizes="16x16">
    <link rel="manifest" href="/images/favicon/manifest.json">
    <link rel="mask-icon" href="/images/favicon/safari-pinned-tab.svg">
    <link rel="shortcut icon" href="/images/favicon/favicon.ico">
    <meta name="apple-mobile-web-app-title" content="Decred - Autonomous Digital Currency">
    <meta name="application-name" content="Decred - Autonomous Digital Currency">
    <meta name="msapplication-TileColor" content="#2973ff">
    <meta name="msapplication-TileImage" content="/images/favicon/mstile-144x144.png">
    <meta name="msapplication-config" content="/images/favicon/browserconfig.xml">
    <meta name="turbolinks-cache-control" content="no-cache">
    <title>{{.}}</title>
    <link href="/css/bootstrap.css" rel="stylesheet">
    <link href="/css/main.css" rel="stylesheet">
    <link href="/css/charts.css" rel="stylesheet">
     <link href="/css/nexthome.css" rel="stylesheet">
    <!-- <link rel="stylesheet/less" type="text/css" href="/css/dynamic.less"> -->
    <script src="/js/turbolinks.js"></script>
    <script src="/js/jquery.js"></script>
    <script src="/js/lodash.min.js"></script>
    <script src="/js/util.js"></script>
    <script src="/js/messagesocket.js"></script>
    <script src="/js/humanize.js"></script>
    <script src="/js/stimulus.umd.js"></script>
    <script src="/js/mousetrap.min.js"></script>
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
</head>
{{end}}

{{define "navbar"}}
<header>
<div class="top-nav">
    <div class="container">
        <div class="logo">
            <a class="no-underline" href="/"><img src="/images/logo.png" alt="dcr-icon"></a>
        </div>
        <div class="right">
            <div class="searchbox">
                <form class="navbar-form" role="search" id="search-form" action="/search">
                    <img src="/images/search.png" alt="search-icon">
                    <input
                        tabindex="0"
                        type="text"
                        class="hide"
                        name="search"
                        id="search"
                        class="form-control top-search mousetrap"
                        placeholder="Search for blocks, addresses or transactions"
                    />
                </form>
            </div>
            <nav role="navigation" id="hamburger-menu" data-turbolinks-permanent>
            <div id="menuToggle">
                <input type="checkbox" id="menuToggleCheckbox"/>
                <span class="patty"></span>
                <span class="patty"></span>
                <span class="patty short"></span>
                <div id="menu">
                    <a data-keynav-skip href="/" title="Home">Home</a>
                    <a data-keynav-skip href="/blocks" title="Decred blocks">Blocks</a>
                    <a data-keynav-skip href="/mempool" title="Decred mempool">Mempool</a>
                    <a data-keynav-skip href="/ticketpool" title="Decred ticket pool">Ticket Pool</a>
                    <a data-keynav-skip href="/charts" title="Decred charts">Charts</a>
                    <a data-keynav-skip href="/agendas" title="Agendas">Agendas</a>
                    <a data-keynav-skip href="/parameters" title="Chain Parameters">Parameters</a>
                    <a data-keynav-skip href="/decodetx" title="Decode or send a raw transaction">Decode/Broadcast Tx</a>
                    {{if eq .NetName "Mainnet"}}
                    <a data-keynav-skip href="http://testnet.dcrdata.org/" title="Home">Switch To Testnet</a>
                    {{else}}
                    <a data-keynav-skip href="https://explorer.dcrdata.org/" title="Home">Switch To Mainnet</a>
                    {{end}}
                    <a data-keynav-skip data-turbolinks="false" href="javascript:toggleSun()" class="jsonly"><span id="sun-icon" class="dcricon-sun-fill no-underline pr-2"></span> Night Mode</a>
                    <a data-keynav-skip data-turbolinks="false" href="#" class="jsonly" id="keynav-toggle">
                        <span class="text">Enable Hot Keys</span><span class="keys-hint">(&nbsp;&nbsp;<span class="arrows"> &#8592;<br>&#8594;</span>&nbsp;&nbsp;enter&nbsp;&nbsp;\&nbsp;&nbsp;=&nbsp;&nbsp;)</span>
                    </a>
                    <a data-keynav-skip href="https://github.com/decred/dcrdata#json-rest-api" title="API Endpoints" target="_blank">JSON API Docs</a>
                </div>
            </div>
        </nav>
        </div>
    </div>
</div>
</header>
<div id="watermark">HODL<br>HODL<br>HODL</div>
<script data-turbolinks-eval="false">
    $(".jsonly").show()
    $.ajaxSetup({
        cache: true
    });
    function setCookie(cname, cvalue, exMins) {
        var d = new Date();
        d.setTime(d.getTime() + (exMins*60*1000));
        var expires = "expires="+d.toUTCString();
        document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
    }
    var sunIcon = document.getElementById("sun-icon")
    var darkBGCookieName = 'dcrdataDarkBG';
    function darkEnabled() {
        return document.cookie.includes(darkBGCookieName)
    }
    if (darkEnabled()) {
        toggleToDarkClasses(document.body)
    } else {
        toggleToLightClasses(document.body)
    }
    function toggleToDarkClasses(body) {
        $(sunIcon).removeClass('dcricon-sun-fill')
        $(sunIcon).addClass('dcricon-sun-stroke')
        $(body).addClass('darkBG')
    }
    function toggleToLightClasses(body) {
        $(body).removeClass('darkBG');
        $(sunIcon).removeClass('dcricon-sun-stroke')
        $(sunIcon).addClass('dcricon-sun-fill')
    }
    function toggleSun() {
        if (darkEnabled()) {
            setCookie(darkBGCookieName, '', 0)
            toggleToLightClasses(document.body)
            $(document).trigger("nightMode", { nightMode: false });
        } else {
            setCookie(darkBGCookieName, 1, 525600)
            toggleToDarkClasses(document.body)
            $(document).trigger("nightMode", { nightMode: true })
        }
    }
    document.addEventListener("turbolinks:before-render", function(event) {
        if (darkEnabled()) {
            toggleToDarkClasses(event.data.newBody)
        } else {
            toggleToLightClasses(event.data.newBody)
        }
    })
    $(document).click( function(e) {
        if ($(e.target).id == "menuToggleCheckbox") {
            return
        }
        if ($(e.target).parents("#hamburger-menu").size() > 0) {
            return
        }
        closeMenu(e)
    })


    function toggleMenu(e) {
        $("#menuToggle input").prop('checked', !$("#menuToggle input").prop('checked'))
    }
    function closeMenu(e) {
        $("#menuToggle input").prop('checked', false)
    }
    function updateConnectionStatus(msg, connected) {
        var el = $('#connection');
        el.removeClass('hidden')
        if (connected) {
            el.addClass('connected')
            el.removeClass('disconnected')
        } else {
            el.removeClass('connected');
            el.addClass('disconnected');
        }
        el.html(msg + '<div></div>')
    }

    function getSocketURI(loc) {
        var protocol = (loc.protocol === 'https:') ? 'wss' : 'ws'
        return protocol + "://" + loc.host + '/ws'
    }

    function sleep(ms) {
        return new Promise(resolve => setTimeout(resolve, ms));
    }

    var ws; // websocket global
    async function createWebSocket(loc) {
        // wait a bit to prevent websocket churn from drive by page loads
        console.log('Waiting to create websocket');
        $('#connection').removeClass('hidden');
        var uri = getSocketURI(loc)
        ws = new MessageSocket(uri);
        await sleep(3000);
        ws.connect()
        console.log('Starting websocket');
        console.log("createdWebSocket", uri, ws)
        ws.registerEvtHandler("open", function() {
            console.log('Connected')
            updateConnectionStatus('Connected', true);
        });

        ws.registerEvtHandler("close", function() {
            console.log('Disconnected')
            updateConnectionStatus('Disconnected', false);
        });

        ws.registerEvtHandler("error", function(evt) {
            console.log("WebSocket error:", evt);
            updateConnectionStatus('Disconnected', false);
        });

        ws.registerEvtHandler("ping", function(evt) {
            console.log("ping. users online: ", evt)
            //ws.send("pong", "copy")
        });
        ws.registerEvtHandler("decodetxResp", function(evt) {
            console.log("Got message: ", evt);
            $("#decode_header").text("Decoded tx");
            $("#decoded_tx").text(evt);
        })
        ws.registerEvtHandler("sendtxResp", function(evt) {
            console.log("Got message: ", evt);
            $("#decode_header").text("Sent tx");
            $("#decoded_tx").text(evt);
        })

        var updateBlockData = function (event) {
            console.log("Received newblock message", event);
            var newBlock = JSON.parse(event);
            var confirms = $('[data-confirmation-block-height]');
            $.each(confirms, function(i, v) {
                if (isNaN($(v).text())) {
                    $(v).text("0");
                }
                $(v).text(
                    newBlock.block.height - $(v).data('confirmation-block-height')
                )
            })

            // block summary data
            var b = newBlock.block;
            desktopNotifyNewBlock(b);

            var expTableRows = $('#explorertable tbody tr');
            //var CurrentHeight = parseInt($('#explorertable tbody tr td').first().text());
            if (expTableRows){
                expTableRows.last().remove()
                var newRow = '<tr id="' + b.height + '">' +
                    '<td><a href="/block/' + b.height + '" class="fs18">' + b.height + '</a></td>' +
                    '<td>' + b.tx + '</td>' +
                    '<td>' + b.votes + '</td>' +
                    '<td>' + b.tickets + '</td>' +
                    '<td>' + b.revocations + '</td>' +
                    '<td>' + humanize.bytes(b.size) + '</td>' +
                    '<td data-target="main.age"  data-age=' + b.time + '>' + humanize.timeSince(b.time) + '</td>' +
                    '<td>' + b.formatted_time + '</td>' +
                '</tr>'
                var newRowHtml = $.parseHTML(newRow)
                $(newRowHtml).insertBefore(expTableRows.first())
            }
            

            var ex = newBlock.extra
            if (window.location.pathname == "/nexthome"){
                $("#coin-supply").html(humanize.decimalParts(ex.coin_supply/100000000, true, 0, false))
                $("#bsubsidy-dev").html(humanize.decimalParts(ex.subsidy.dev/100000000, false, 8, false, 2))
                $("#dev-fund").html(humanize.decimalParts(ex.dev_fund/100000000, true, 0, false))
                $("#pool-value").html(humanize.decimalParts(ex.pool_info.value, true, 0, false))
                $("#pool-info-percentage").html("("+parseFloat(ex.pool_info.percent).toFixed(2)+" % of total supply)")
                $("#bsubsidy-pos").html(humanize.decimalParts((ex.subsidy.pos/500000000), false, 8, false, 2))
                $("#ticket-reward").html("("+ humanize.fmtPercentage(ex.reward)+ " per ~29.07 days)")
                $("#ticket-price").html(humanize.decimalParts(ex.sdiff, false, 8, false, 2))
                $("#diff").html(humanize.decimalParts(ex.difficulty/1000000, true, 0, false))
                $("#bsubsidy-pow").html(humanize.decimalParts(ex.subsidy.pow/100000000, false, 8, false, 2))
                $("#hashrate").html(humanize.decimalParts(ex.hash_rate, false, 8, false, 2))
                $("#hashrate-subdata").html("("+ humanize.fmtPercentage(ex.hash_rate_change)+ " in 24hr)")

                var newB = $(".block-info").first().clone(true)
                newB.find("#block-height").text(b.height)
                newB.find("#block-age").attr("data-age", b.time)
                newB.find("#total-sent").html(humanize.decimalParts(b.TotalSent, false, 2, false, 2))
                newB.find("#tx-count").text("sent in "+b.AllTxs+" transactions")
                newB.find("#votes").text(b.votes)
                newB.find("#tickets").text(b.tickets)
                newB.find("#show-block").attr("href", "/block/" + b.height)
                $(newB).insertAfter("#mempool-info")

                $(".block-info").last().remove()
            }

             if (window.location.pathname == "/"){
                $("#difficulty").html(humanize.decimalParts(ex.difficulty, true, 8))
                $("#bsubsidy_total").html(humanize.decimalParts(ex.subsidy.total/100000000, false, 8))
                $("#bsubsidy_pow").html(humanize.decimalParts(ex.subsidy.pow/100000000, false, 8))
                $("#bsubsidy_pos").html(humanize.decimalParts((ex.subsidy.pos/500000000), false, 8)) // 5 votes per block (usually)
                $("#bsubsidy_dev").html(humanize.decimalParts(ex.subsidy.dev/100000000, false, 8))
                $("#coin_supply").html(humanize.decimalParts(ex.coin_supply/100000000, true, 8))
                $("#blocksdiff").html(humanize.decimalParts(ex.sdiff, false, 8))
                $("#dev_fund").html(humanize.decimalParts(ex.dev_fund/100000000, true, 8))
                $("#window_block_index").text(ex.window_idx)
                $("#pos-window-progess-bar").css({ width: (ex.window_idx/ex.params.window_size)*100 + "%" })
                $("#reward_block_index").text(ex.reward_idx)
                $("#pow-window-progess-bar").css({ width: (ex.reward_idx/ex.params.reward_window_size)*100 + "%" })
                $("#pool_size").text(ex.pool_info.size)
                $("#pool_value").html(humanize.decimalParts(ex.pool_info.value, true, 8))
                $("#ticket_reward").html(parseFloat(ex.reward).toFixed(2))
                $("#target_percent").html(parseFloat(ex.pool_info.percent_target).toFixed(2))
                $("#pool_size_percentage").html(parseFloat(ex.pool_info.percent).toFixed(2))
            }
        };
        ws.registerEvtHandler("newblock", updateBlockData);

        ws.registerEvtHandler("mempool", function(event){
            var mempool = JSON.parse(event);
            $("#mempool-total-sent").html(humanize.decimalParts(mempool.total, false, 2, false, 2))
            $("#mempool-tx-count").text("sent in "+mempool.num_all+" transactions")
            $("#mempool-votes").text(mempool.num_votes)
            $("#mempool-tickets").text(mempool.num_tickets)
        });
    }

    document.getElementById('search').onkeypress = function(e){
        if (!e) e = window.event;
        var keyCode = e.keyCode || e.which;
        if (keyCode == '13'){
            Turbolinks.visit("/search?search="+this.value);
            return false;
        }
    }

    // desktop notifications
    function onShowNotification() {
        console.log('block ntfn shown');
    }
    function onCloseNotification() {
        console.log('block ntfn closed');
    }
    function onClickNotification() {
        console.log('block ntfn clicked');
    }
    function onErrorNotification() {
        console.error('Error showing notification. You may need to request permission.');
    }
    function onPermissionGranted() {
        console.log('Permission has been granted by the user');
    }
    function onPermissionDenied() {
        console.warn('Permission has been denied by the user');
    }

    function doNotification(block) {
        var newBlockNtfn = new Notify('New Decred Block Mined', {
            body: 'Block mined at height ' + block.height,
            tag: 'blockheight',
            image: '/images/dcrdata144x128.png',
            icon: '/images/dcrdata144x128.png',
            notifyShow: onShowNotification,
            notifyClose: onCloseNotification,
            notifyClick: onClickNotification,
            notifyError: onErrorNotification,
            timeout: 10
        });
        newBlockNtfn.show();
    }

    function desktopNotifyNewBlock(block) {
        if (!Notify.needsPermission) {
            doNotification(block);
        }
    }
</script>

<script>
    $(".searchbox img").click(function(){
        $(".searchbox input").toggleClass("hide");
        $(".right .searchbox").toggleClass("full")
    });
    
    if (!ws) {
        createWebSocket(window.location)
    }
</script>

<script src="/js/notify.min.js"></script>

{{end}}

{{define "footer"}}
<footer class="navbar-fixed-bottom">
    <div class="container wrapper text-center">
        <div style="text-align: left; margin:0 auto !important; display:inline-block">
            <a class="nav-item" href="https://github.com/decred/dcrdata" title="dcrdata on GitHub" target="_blank">dcrdata v{{.Version}}</a>
            <a class="nav-item" href="https://github.com/decred/dcrdata/blob/master/LICENSE" target="_blank">© 2018 The Decred developers (ISC)</a>
        </div>
        <div style="float: right;">
            <span data-turbolinks-permanent class="nav-item" id="connection"
                title="While connected, you will receive live page updates and, if enabled, desktop notifications (click to enable)."
                >Connecting to WebSocket...<div></div>
            </span>
        </div>
    </div>
</footer>
<script data-turbolinks-eval="false">

    // Keyboard Navigation
    var targets;
    var targetsLength;
    var currentIndex = 0;
    var jumpToIndexOnLoad;
    var keyNavCookieName = 'dcrdataKeyNav';

    function keyNavEnabled() {
        return document.cookie.includes(keyNavCookieName)
    }

    function clearTargets() {
        $(".keynav-target").each((i,el) => {
            $(el).removeClass("keynav-target").removeClass("pulsate")
        })
    }

    function enableKeyNav() {
        setCookie(keyNavCookieName, 1, 525600)
        Mousetrap.unpause()
        $("#keynav-toggle .text").text("Disable Hot Keys")
        keyNav()
    }

    function disableKeyNav () {
        setCookie(keyNavCookieName, '', 0)
        clearTargets()
        $("#keynav-toggle .text").text("Enable Hot Keys")
        Mousetrap.pause()
    }

    function toggleKeyNav() {
        if (keyNavEnabled()) {
            disableKeyNav()
        }  else {
            enableKeyNav()
        }
    }

    function updateKeyNavTargets() {
        if ($("#menuToggle input").prop('checked')) {
            targets = $('#hamburger-menu a');
        } else {
            targets = $.merge($("a:not([data-keynav-skip])"),($('.top-search')));
        }
        targetsLength = targets.length;
        clearTargets()
        $(targets[currentIndex]).addClass("keynav-target").focus().blur() // refocuses keyboard context
        if (pulsate) {
            $(targets[currentIndex]).addClass("pulsate")
        }
    }


    function keyNav(event, pulsate, preserveIndex) {
        if ($("#menuToggle input").prop('checked')) {
            targets = $('#hamburger-menu a');
            currentIndex = 0;
        } else {
            targets = $.merge($("a:not([data-keynav-skip])"),($('.top-search')));
            if (jumpToIndexOnLoad > 0) {
                currentIndex = jumpToIndexOnLoad;
                jumpToIndexOnLoad = undefined;
            } else if (!preserveIndex) {
                var priorityLink = $("[data-keynav-priority]")[0]
                var i = $.inArray(priorityLink, targets)
                currentIndex = i > 0 ? i : 0;
            }
        }
        targetsLength = targets.length;
        clearTargets()
        $(targets[currentIndex]).addClass("keynav-target").focus().blur() // refocuses keyboard context
        if (pulsate) {
            $(targets[currentIndex]).addClass("pulsate")
        }
    }

    Mousetrap.bind(['left','['], function(e) {
        clearTargets()
        currentIndex--
        if (currentIndex < 0) {
            currentIndex = targetsLength-1
        }
        $(targets[currentIndex]).addClass("keynav-target")
    });

    Mousetrap.bind(['right',']'], function(e) {
        clearTargets()
        currentIndex++
        if (currentIndex >= targetsLength) {
            currentIndex = 0
        }
        $(targets[currentIndex]).addClass("keynav-target")
    });

    Mousetrap.bind('enter', function(e) {
        if (targets.length < currentIndex) {
            return
        }
        var currentTarget = $(targets[currentIndex])
        if (currentTarget.is( "input")) {
            currentTarget.focus()
            e.stopPropagation()
            e.preventDefault()
            return
        }
        if (currentTarget[0].id == 'keynav-toggle') {
            toggleKeyNav()
            return
        }
        var location = currentTarget.attr('href');
        if (location !== undefined) {
            var preserveKeyNavIndex = currentTarget.data("preserveKeynavIndex")
            if (preserveKeyNavIndex) {
                jumpToIndexOnLoad = currentIndex
            }
            currentTarget.addClass("activated")
            Turbolinks.visit(location)
            return
        }
    });

    Mousetrap.bind('\\', function(e) {
        e.preventDefault();
        var $topSearch = $(".top-search")
        if ($topSearch.hasClass("keynav-target")) {
            $topSearch.blur()
            clearTargets()
            keyNav(e, true, 0)
        } else {
            clearTargets()
            $topSearch.addClass("keynav-target").focus()
        }
    });

    Mousetrap.bind('`', function(e) {
       toggleSun()
    });

    Mousetrap.bind('=', function(e) {
        toggleMenu(e)
        keyNav(e, true)
    });

    Mousetrap.bind('q', function(e) {
        clearTargets()
    });

    $("#keynav-toggle .text").text(keyNavEnabled() ? "Disable Hot Keys":"Enable Hot Keys" )
    document.addEventListener("turbolinks:load", function(e){
        closeMenu(e)
        if (keyNavEnabled()) {
            $(".top-search").removeAttr("autofocus")
            keyNav(e, true)
        } else {
            $(".top-search").focus()
        }
    })

    $("#keynav-toggle").on("click", function(e) {
        if (e.offsetX == 0) {
            // prevent duplicate click handling when turbolinks re-attaches handlers
            // TODO find a more semantic way to deal with this
            return
        }
        toggleKeyNav()
    })

    $("#menuToggle input").change(function(e) {
        var menuIsOpen = $(e.currentTarget).prop("checked")
        if (keyNavEnabled()) {
            keyNav(e, true)
        }
    });

</script>
<script>
    $('.scriptDataStar').on('click', function(){
        $(this).next('.scriptData').slideToggle();
    });
    $('#connection').on('click', function(){
        if (Notify.needsPermission) {
            Notify.requestPermission(onPermissionGranted, onPermissionDenied);
        }
    })
</script>

<script data-turbolinks-eval="false">
const app = Stimulus.Application.start()
</script>
<script src="/js/controllers/main.js"  data-turbolinks-eval="false"></script>
<script src="/js/controllers/mempool.js"  data-turbolinks-eval="false"></script>
<script src="/js/controllers/agenda.js"  data-turbolinks-eval="false"></script>
<script src="/js/controllers/charts.js" data-turbolinks-eval="false"></script>
<script src="/js/controllers/address.js" data-turbolinks-eval="false"></script>
<script src="/js/controllers/ticketpool.js" data-turbolinks-eval="false"></script>
{{end}}

{{define "decimalParts"}}
    {{if eq (len .) 4}}
    <span class="int">{{ index . 0 }}.{{ index . 1 }}</span>
    {{if gt (len (index . 2)) 0}}<span class="decimal lh15rem">{{ index . 2 }}</span>
    <span class="decimal lh15rem trailing-zeroes">{{ index . 3 }}</span>{{end}}
    {{else}} 
    <span class="int">{{index . 0}}</span>
    {{if gt (len (index . 1)) 0}}<span class="dot">.</span>
    <span class="decimal lh15rem">{{index . 1 }}</span>
    <span class="decimal lh15rem trailing-zeroes">{{index . 2}}</span>{{end}}
    {{end}}
{{end}}

{{define "fmtPercentage"}}
    {{if gt . 0.0}}<span style="color:green">+{{printf "%.2f" .}} %</span>
    {{else}}<span style="color:red">{{printf "%.2f" .}} %</span>{{end}}
{{end}}
